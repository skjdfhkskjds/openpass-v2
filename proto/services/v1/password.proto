// SPDX-License-Identifier: MIT
//
// Copyright (c) 2024 skjdfhkskjds
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";
package services.v1;

import "proto/types/v1/password.proto";

option go_package = "github.com/skjdfhkskjds/proto";

service PasswordService {
  // GetPassword returns the password for the given password request.
  rpc GetPassword(types.v1.GetPasswordRequest) returns (types.v1.GetPasswordResponse);

  // SetPassword sets a password for the given password request.
  rpc SetPassword(types.v1.SetPasswordRequest) returns (types.v1.SetPasswordResponse);

  // DeletePassword deletes the password for the given password request.
  rpc DeletePassword(types.v1.DeletePasswordRequest) returns (types.v1.DeletePasswordResponse);

  // UpdatePassword updates the password for the given password request.
  rpc UpdatePassword(types.v1.UpdatePasswordRequest) returns (types.v1.UpdatePasswordResponse);
}
